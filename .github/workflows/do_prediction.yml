on:
  workflow_dispatch:
  schedule:
  - cron: "0 21 * * *"


jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: rocker/geospatial:4.2
    #env:
    #  GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # - name: Setup R
      #   uses: r-lib/actions/setup-r@v1

# from https://github.com/actions/cache/blob/main/examples.md#r---renv
      - name: Set RENV_PATHS_ROOT
        shell: bash
        run: |
          echo "RENV_PATHS_ROOT=${{ runner.temp }}/renv" >> $GITHUB_ENV
          
      - name: Install and activate renv
        run: |
          Sys.setenv(ARROW_S3 = "ON")
          install.packages("renv")
          renv::activate()
          renv::restore() 
        shell: Rscript {0}
        
      # - name: Get R and OS version
      #   id: get-version
      #   run: |
      #     echo "os-version=sessionInfo()$running" >> $GITHUB_OUTPUT
      #     echo "r-version=R.Version()$version.string" >> $GITHUB_OUTPUT
      #   shell: Rscript {0}
        
      - name: Restore Renv package cache
        uses: actions/cache@v3
        with:
          path: ${{ env.RENV_PATHS_ROOT }}
          key: ${{ steps.get-version.outputs.os-version }}-${{ steps.get-version.outputs.r-version }}-${{ inputs.cache-version }}-${{ hashFiles('renv.lock') }}
          restore-keys: ${{ steps.get-version.outputs.os-version }}-${{ steps.get-version.outputs.r-version }}-${{inputs.cache-version }}-
          
      # - name: Cache Renv packages
      #   uses: actions/cache@v2
      #   with:
      #     path: $HOME/.local/share/renv
      #     key: r-${{ hashFiles('renv.lock') }}
      #     restore-keys: r-

      # - name: Install packages
      #   run: |
      #     R -e 'install.packages("renv")'
      #     R -e 'renv::activate()'
      #     R -e 'renv::restore()'
          
# Point to the right path, run the right Rscript command
      - name: Run automatic prediction file
        run: |
          Rscript -e "library(targets); tar_make(); tar_meta(fields = error, complete_only = TRUE)"